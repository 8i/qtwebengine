/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtwebengine-platform-notes.html
    \title Qt WebEngine Platform Notes

    \brief Contains information about issues that are specific to the Qt WebEngine module.

    \section1 Building Qt WebEngine from Source

    Static builds are not supported.

    The requirements for building Qt 5 modules from source are listed separately for each supported
    platform:

    \list
        \li \l{Qt for Windows - Requirements}
        \li \l{Qt for X11 Requirements}
        \li \l{Qt for macOS - Requirements}
    \endlist

    In addition, the following tools are required for building the \l {Qt WebEngine} module:

    \list
        \li \l {All Platforms}
        \li \l {Windows}
        \li \l {Linux}
        \li \l {macOS}
    \endlist

    The tests for skipping the Qt WebEngine build are located in the
    \c qtwebengine repository, in the \c tools\qmake\mkspecs subdirectory.
    They can be found by searching for \c skipBuild.

    \section2 All Platforms

    On all platforms, the following tools are required:

    \list
        \li \l Python 2.7.5 or later
        \li Bison, Flex
        \li GPerf
    \endlist

    \section2 Windows

    On Windows, Visual Studio 2015 and Windows 10 SDK are required.

    \section2 Linux

    On Linux, Clang or GCC version 4.7 or later is required.
    Supported configurations are \c linux-g++ and \c{linux-clang}.

    Qt WebEngine requires \c pkg-config to detect most of its dependencies. The
    following \c pkg-config files are required:

    \list
        \li \c dbus-1
        \li \c fontconfig
    \endlist

    If Qt was configured for \c xcb, the following \c pkg-config files are also
    required:

    \list
        \li \c libdrm
        \li \c xcomposite
        \li \c xcursor
        \li \c xi
        \li \c xrandr
        \li \c xscrnsaver
        \li \c xtst
    \endlist

    Further, development packages for \c khr and \c libcap need to be installed.

    \section2 \macos

    On \macos, the following are required:

    \list
        \li \macos 10.9 or later
        \li Xcode 5.1 or later
        \li \macos 10.10 SDK or later
    \endlist

    \note Qt WebEngine cannot be built for the 32-bit mode of \macos (using the
    \c macx-clang-32 \c mkspec).

    \section1 Mac App Store Compatibility

    By default, Qt WebEngine uses private \macos API, which might cause an application to be
    rejected when submitted to the Mac App Store. To configure Qt WebEngine not to use these API
    calls, Qt has to be reconfigured with the \c -appstore-compliant switch.

    However, this will cause some behavioral changes, such as:

    \list
        \li The \macos Kill Ring functionality will no longer work (emacs-like copy pasting).
        \li Certain Chromium sandboxing cleanup is not done.
        \li Text areas will be painted with a different style.
        \li Text fields might be painted with a different style on Mountain Lion (\macos 10.8).
    \endlist

    \section1 macOS Airplay Support on MacBooks with Dual GPUs

    To make Qt WebEngine work correctly when streaming to an AppleTV from a MacBook that supports
    GPU switching, it is important to add the \c NSSupportsAutomaticGraphicsSwitching option to the
    application Info.plist file, with the value set to \c YES. Otherwise rendering issues might
    occur when creating new web engine view instances after Airplay is switched on or off.

    \section1 Default QSurfaceFormat OpenGL Profile Support

    If a new default QSurfaceFormat with a modified OpenGL profile has to be set, it should be set
    before the application instance is declared, to make sure that all created OpenGL contexts use
    the same OpenGL profile.

    On \macos, if the default QSurfaceFormat is set after the application instance, the application
    will exit with qFatal(), and print a message that the default QSurfaceFormat should be set
    before the application instance.

    \section1 Sandboxing Support

    Qt WebEngine provides out-of-the-box sandboxing support for Chromium render processes on Linux
    and \macos. Sandboxing is currently not supported on Windows due to a limitation in how
    the sandbox is set up and how it interacts with the host process provided by the Qt WebEngine
    libraries.

    On \macos, there are no special requirements for enabling sandbox support.

    On Linux, the kernel has to support the anonymous namespaces feature (kernel version >= 3.8)
    and seccomp-bpf feature (kernel version >= 3.5). Setuid sandboxes are not supported and are thus
    disabled.

    To explicitly disable sandboxing, the \c QTWEBENGINE_DISABLE_SANDBOX environment variable can be
    set to 1 or alternatively the \c{--no-sandbox} command line argument can be passed to the user
    application executable.

*/
